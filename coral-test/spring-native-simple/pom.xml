<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.coral.test</groupId>
        <artifactId>coral-test</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>

    <artifactId>spring-native-simple</artifactId>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- -->
        <native-maven-plugin.version>0.10.1</native-maven-plugin.version>


        <!-- core start -->

        <!-- -->
        <knife4j-openapi3.version>4.4.0</knife4j-openapi3.version>
        <springdoc-openapi.version>2.3.0</springdoc-openapi.version>
        <!-- -->
        <cglib.version>3.3.0</cglib.version>
        <!-- -->
        <mybatis-plus.version>3.5.5</mybatis-plus.version>

        <!-- -->
        <hutool.version>5.8.27</hutool.version>
        <!-- -->
        <mapstruct.version>1.6.0.Beta1</mapstruct.version>
        <!-- -->
        <jakarta.el.api.version>6.0.0-RC1</jakarta.el.api.version>
        <jakarta.el.version>5.0.0-M1</jakarta.el.version>
        <!-- core end -->

        <!-- 响应式jdbc mysql -->
        <r2dbc-mysql.version>1.1.2</r2dbc-mysql.version>
        <r2dbc-proxy.version>1.1.4.RELEASE</r2dbc-proxy.version>

    </properties>

    <dependencies>
        <!-- core start -->

        <!-- aot 编译需要 start -->
        <!-- https://mvnrepository.com/artifact/jakarta.el/jakarta.el-api -->
        <dependency>
            <groupId>jakarta.el</groupId>
            <artifactId>jakarta.el-api</artifactId>
            <version>${jakarta.el.api.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.glassfish/jakarta.el -->
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>jakarta.el</artifactId>
            <version>${jakarta.el.version}</version>
        </dependency>
        <!-- aot 编译需要 end -->

        <!-- https://mvnrepository.com/artifact/cn.hutool/hutool-core -->
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-core</artifactId>
            <version>${hutool.version}</version>
        </dependency>


        <!-- https://mvnrepository.com/artifact/cglib/cglib -->
        <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib</artifactId>
            <version>${cglib.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.hibernate/hibernate-validator -->
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
        </dependency>

        <!-- api文档 start -->
        <!-- api文档生成 替代springfox -->
        <dependency>
            <groupId>com.github.xiaoymin</groupId>
            <artifactId>knife4j-openapi3-jakarta-spring-boot-starter</artifactId>
            <version>${knife4j-openapi3.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.springdoc</groupId>
                    <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webflux-ui</artifactId>
            <version>${springdoc-openapi.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webflux-ui</artifactId>
            <version>${springdoc-openapi.version}</version>
        </dependency>
        <!-- api文档 end -->


        <!-- core end -->
        <!-- ####################################################################################### -->


        <!-- 响应式jdbc -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-r2dbc</artifactId>
        </dependency>
        <!-- https://mvnrepository.com/artifact/io.asyncer/r2dbc-mysql -->
        <dependency>
            <groupId>io.asyncer</groupId>
            <artifactId>r2dbc-mysql</artifactId>
            <version>${r2dbc-mysql.version}</version>
        </dependency>


        <!-- 配置文件 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- web -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
        </dependency>

        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${mapstruct.version}</version>
        </dependency>

        <!-- 私有 -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct-processor</artifactId>
            <version>${mapstruct.version}</version>
            <scope>provided</scope>
        </dependency>


        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>


    </dependencies>


    <build>
        <resources>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.xml</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.*</include>
                </includes>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>org.graalvm.buildtools</groupId>
                <artifactId>native-maven-plugin</artifactId>
                <configuration>
                    <!-- imageName用于设置生成的二进制文件名称 -->
                    <imageName>${project.artifactId}</imageName>
                    <!-- mainClass用于指定main方法类路径 -->
                    <mainClass>com.coral.test.spring.simple.SimpleMainApplication</mainClass>
                    <!--                    <useArgFile>true</useArgFile>-->
                    <skip>false</skip>
                    <!-- 如果要启用调试信息的生成，请在插件配置中提供以下内容-->
                    <debug>false</debug>
                    <!--启用详细输出-->
                    <verbose>false</verbose>
                    <buildArgs combine.children="append">
                        <buildArg>-H:+AddAllCharsets</buildArg>
                        <buildArg>-Djavax.xml.accessExternalDTD=all</buildArg>
                        <buildArg>
                            --initialize-at-run-time=sun.net.dns.ResolverConfigurationImpl
                            --initialize-at-build-time=cn.hutool.core.util.ClassLoaderUtil
                            --initialize-at-build-time=cn.hutool.core.convert.BasicType
                            --initialize-at-build-time=cn.hutool.core.util.CharsetUtil
                            --features=com.coral.test.spring.simple.core.feature.RuntimeRegistrationFeature
                        </buildArg>
                    </buildArgs>

                </configuration>

            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>